language: cpp
os: linux
dist: bionic
env:
#  - CC=gcc-7 CXX=g++-7 GCOV=gcov-7 GTEST_TAG=release-1.10.0
  - CC=gcc-8 CXX=g++-8 GCOV=gcov-8 GTEST_TAG=release-1.10.0

before_script:
  # Installing the requested GCC versions
  - sudo apt install -y $CC
  - sudo apt install -y $CXX
  # Setting up the default GCC version
  - sudo update-alternatives --install /usr/bin/gcc gcc /usr/bin/$CC 80 --slave /usr/bin/g++ g++ /usr/bin/$CXX --slave /usr/bin/gcov gcov /usr/bin/$GCOV
  - sudo update-alternatives --set gcc /usr/bin/$CC
  - gcc -v
  - g++ -v
  - gcov -v
  # Installing Qt packages
  - sudo apt update
  - sudo apt install -y qt5-default
  - sudo apt install -y qt5-qmake
  - sudo apt install -y libqt5charts5-dev
  - sudo apt install -y libqt5serialport5-dev
  - qmake -v
  # Cloning the Google Test repository and checking out the requested tag
  - pushd ..
  - git clone https://github.com/google/googletest.git
  - cd googletest
  - git checkout $GTEST_TAG
  - popd
  # Installing Coveralls
  - pip install --user cpp-coveralls
  # Installing CppCheck
  - sudo apt install -y cppcheck
  # Installing other tools and utilities
  - sudo apt install -y tree


script:
  # Building the project
  - mkdir build && cd build
  - qmake BUILD_TESTS="On" ..
  - make
  # Running the unit tests
  - ./tests/RDB_Diplomaterv_Monitor_Unit_Tests
  # Running the cppcheck
  - cppcheck ../application/sources --verbose 2> cppcheck_errors.txt
  - echo "Errors found by CppCheck:"
  - cat cppcheck_errors.txt
  # Printing out the directory structure for debugging purposes
  - tree ..

after_success:
  # Sending the coverage data to Coveralls
  # - coveralls --verbose --root .. --include "application/" --exclude "tests/" --gcov-options '\-lp'
  - coveralls --verbose --root .. --gcov-options '\-lp'
